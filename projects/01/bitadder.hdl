CHIP bitadder
{
	IN a[16], b[16], cin;
        OUT sum[16], cout;
        PARTS:
	Xor(a=b[0],b=cin,out=x0);
	Xor(a=b[1],b=cin,out=x1);
	Xor(a=b[2],b=cin,out=x2);
	Xor(a=b[3],b=cin,out=x3);
	Xor(a=b[4],b=cin,out=x4);
	Xor(a=b[5],b=cin,out=x5);
	Xor(a=b[6],b=cin,out=x6);
	Xor(a=b[7],b=cin,out=x7);
	Xor(a=b[8],b=cin,out=x8);
	Xor(a=b[9],b=cin,out=x9);
	Xor(a=b[10],b=cin,out=x10);
	Xor(a=b[11],b=cin,out=x11);
	Xor(a=b[12],b=cin,out=x12);
	Xor(a=b[13],b=cin,out=x13);
	Xor(a=b[14],b=cin,out=x14);
	Xor(a=b[15],b=cin,out=x15);
        cla(a[0]=a[0], a[1]=a[1], a[2]=a[2], a[3]=a[3], b[0]=x0, b[1]=x1, b[2]=x2, b[3]=x3, cin=cin,s[0]=sum[0], s[1]=sum[1], s[2]=sum[2], s[3]=sum[3], cout=x);
        cla(a[0]=a[4], a[1]=a[5], a[2]=a[6], a[3]=a[7], b[0]=x4, b[1]=x5, b[2]=x6, b[3]=x7, cin=x, s[0]=sum[4], s[1]=sum[5], s[2]=sum[6], s[3]=sum[7], cout=y);
	cla(a[0]=a[8], a[1]=a[9], a[2]=a[10],a[3]=a[11],b[0]=x8, b[1]=x9, b[2]=x10,b[3]=x11,cin=y, s[0]=sum[8], s[1]=sum[9], s[2]=sum[10],s[3]=sum[11],cout=z);
	cla(a[0]=a[12],a[1]=a[13],a[2]=a[14],a[3]=a[15],b[0]=x12,b[1]=x13,b[2]=x14,b[3]=x15,cin=z, s[0]=sum[12],s[1]=sum[13],s[2]=sum[14],s[3]=sum[15],cout=Q);
	   	
}